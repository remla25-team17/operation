app:
  name: app
  replicas: 1
  version: "0.1.0"
  image:
    repository: "ghcr.io/remla25-team17/app-service"
    tag: "latest"
    pullPolicy: IfNotPresent
  # This will now reference the templated service name
  modelServiceUrl: "http://{{ .Release.Name }}-model-service"

model:
  name: model-service
  replicas: 1
  version: "0.1.2"
  image:
    repository: "ghcr.io/remla25-team17/model-service"
    tag: "latest"
    pullPolicy: IfNotPresent
  modelUrl: "https://github.com/remla25-team17/model-training/releases/download/0.1.2/model.pkl"
  modelPath: "model/model.pkl"
  bowUrl: "https://github.com/remla25-team17/model-training/releases/download/0.1.2/bag_of_words.pkl"
  bowPath: "model/bag_of_words.pkl"

service:
  type: ClusterIP
  port: 5000
  host: "0.0.0.0"

backendService:
  port: 8080
  host: "0.0.0.0"

ingress:
  enabled: true
  hostname: "app.local"

secrets:
  smtpPassword: "password"

volume:
  enabled: true
  hostPath: "/test/"

monitoring:
  release: prometheus
  path: /api/v1/metrics
  interval: 15s

alertmanager:
  config:
    global:
      resolve_timeout: 5m

    route:
      reciver: 'team17'

    receivers:
      - name: 'team17'
        email_configs:
          - to: 'remla25-team17@example.com'
            from: 'remla25-team17@example.com'
            smarthost: 'smtp.example.com:587'
            auth_username: 'remla25-team17'
            auth_password: {{.Values.secrets.smtpPassword }}

